{"version":3,"sources":["webpack:///webpack/bootstrap 33a01c8fe470dc8ad3d2","webpack:///./src/js/main.js","webpack:///./src/js/userInput.js","webpack:///./src/js/promises.js","webpack:///./src/js/templates.js","webpack:///./src/styles/styles.css"],"names":[],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 33a01c8fe470dc8ad3d2\n **/","/**\r\n * Created by Nomad_Mystic on 7/7/2016.\r\n */\r\n\r\n// get styles into the project from webpack\r\nrequire('../styles/styles.css');\r\n\r\nimport {userInputBlockOnSubmit, buildMagicBlockTableClickEvents} from './userInput';\r\n// import * as testingImport from './testExportModule';\r\nimport * as promises from './promises';\r\nimport {buildMagicBlockTable, buildUserMagicBlock} from './templates';\r\n\r\n// let {testingObjectCreation} = testingImport.testingFunction();\r\n\r\n// part of the unit test experimentation\r\n// let numberArray = testingImport.buildArray(4);\r\n\r\n\r\n// when the user clicks to submit search of block\r\nlet submitBlock = document.getElementById('submitBlock');\r\nlet inputValueOnSubmit = submitBlock.addEventListener('click', () => {\r\n    // returns filtered array of Magic blocks\r\n    let inputValue = userInputBlockOnSubmit();\r\n\r\n    // calls all magic sets and blocks from JSON\r\n    let userMagicBlocks = promises.getURLPromise('/data/magicData.json').then(function(response) {\r\n        // let userInputValue = buildUserMagicBlock(response, inputValue);\r\n\r\n        buildUserMagicBlock(response, inputValue);\r\n    }, function(error) {\r\n        console.error(\"Failed!\", error);\r\n    });\r\n    return userMagicBlocks;\r\n});\r\n// console.log(inputValue);\r\n\r\n\r\n\r\n\r\n// INIT all sets on window load\r\nwindow.addEventListener('load' , () => {\r\n    // calls all magic sets and blocks from JSON on initial load\r\n    let allMagicBlocks = promises.getURLPromise('/data/magicData.json').then(function(response) {\r\n        // calls template fr population of the table on load\r\n        buildMagicBlockTable(response);\r\n\r\n        // build out the click events for each of the block on init\r\n        buildMagicBlockTableClickEvents();\r\n\r\n    }, function(error) {\r\n        console.error(\"Failed!\", error);\r\n    });\r\n}); // end window onLoad\r\n\r\nconsole.log('Input value' + inputValueOnSubmit);\r\n\r\n// console.log(numberArray);\r\n// console.log(testingObjectCreation.objectOne);\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/main.js\n **/","/**\r\n * Created by endof on 7/9/2016.\r\n */\r\nimport * as promises from './promises';\r\nimport {buildUserMagicBlock} from './templates';\r\n\r\nexport let userInputBlockOnSubmit = () => {\r\n\r\n    // let inputValue = document.getElementById('inputBlock').value;\r\n    return document.getElementById('inputBlock').value;\r\n\r\n\r\n    // let inputValue = inputBlock.value;\r\n    // return inputValue;\r\n};\r\n\r\n// When user clicks on table\r\nexport let buildMagicBlockTableClickEvents = () => {\r\n    // create click event for when user clicks on one of the <td>'s\r\n    let loadBlockOnTableClick = document.querySelectorAll('.initBlockTr');\r\n    console.log(loadBlockOnTableClick);\r\n    loadBlockOnTableClick.forEach((block) => {\r\n        block.addEventListener('click', function(evnt) {\r\n            console.log(evnt.target.innerText);\r\n            let inputValue = evnt.target.innerText;\r\n            promises.getURLPromise('/data/magicData.json').then(function(response) {\r\n                \r\n                buildUserMagicBlock(response, inputValue);\r\n            }, function(error) {\r\n                console.error(\"Failed!\", error);\r\n            }); // end promise\r\n        });\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/userInput.js\n **/","/**\r\n * Created by endof on 7/9/2016.\r\n */\r\n\r\n\r\nexport let getURLPromise = (url) => {\r\n    // Return a new promise.\r\n    return new Promise(function(resolve, reject) {\r\n        // Do the usual XHR stuff\r\n        var req = new XMLHttpRequest();\r\n        req.open('GET', url);\r\n\r\n        req.onload = function() {\r\n            // This is called even on 404 etc\r\n            // so check the status\r\n            if (req.status == 200) {\r\n                // Resolve the promise with the response text\r\n                resolve(req.response);\r\n            }\r\n            else {\r\n                // Otherwise reject with the status text\r\n                // which will hopefully be a meaningful error\r\n                reject(Error(req.statusText));\r\n            }\r\n        };\r\n\r\n        // Handle network errors\r\n        req.onerror = function() {\r\n            reject(Error(\"Network Error\"));\r\n        };\r\n\r\n        // Make the request\r\n        req.send();\r\n    });\r\n};\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/promises.js\n **/","/**\r\n * Created by endof on 7/9/2016.\r\n */\r\n\r\n\r\n\r\nexport let buildMagicBlockTable = (response) => {\r\n    // console.log(inputValue + ' inputValue');\r\n    let parseResponse = JSON.parse(response);\r\n    // console.log(\"Success!\", parseResponse);\r\n    \r\n    let magicTable = document.getElementById('magicTable');\r\n    let table = '';\r\n    parseResponse.children.forEach((magicSet) => {\r\n        // console.log(magicSet);\r\n        table += `<tr class=\"initBlockTr\">\r\n                <td class=\"${magicSet.name}\">${magicSet.name}</td>\r\n            </tr>\r\n        `;\r\n    });\r\n    \r\n    magicTable.innerHTML = table;\r\n};\r\n\r\n\r\nexport let buildUserMagicBlock = (response, inputValue) => {\r\n\r\n    if (response != null) {\r\n        let parsedResponse = JSON.parse(response);\r\n        // remove on load table with user input\r\n        // console.log(inputValue);\r\n        let magicTable = document.getElementById('magicTable');\r\n        magicTable.innerHTML = '';\r\n        let table = '';\r\n\r\n        parsedResponse.children.forEach((magicBlock) => {\r\n            // if the user input is the name of on of the\r\n            // magic blocks build template with their input\r\n            if (magicBlock.name === inputValue) {\r\n                // console.log(magicBlock.children);\r\n                // make the header of the table be user input\r\n                let tableHeader = document.getElementById('tableHeader');\r\n                tableHeader.innerText = `${magicBlock.name}`;\r\n\r\n                magicBlock.children.forEach((magicSet) => {\r\n                    // console.log(magicSet.name);\r\n                    // removing special characters from the the sets name for URL\r\n                    let removeMagicSetSpecial = magicSet.name.replace(/[^a-zA-Z ]/g, '');\r\n                    // console.log(removeMagicSetSpecial);\r\n                    // Remove any places for the URL value\r\n                    let magicSetURL = removeMagicSetSpecial.replace(/\\s+/g, '-').toLowerCase();\r\n                    table += `\r\n                    <tr>\r\n                        <td class=\"${magicSet.name}\">\r\n                            <a href=\"http://magic.wizards.com/en/game-info/products/card-set-archive/${magicSetURL}\" target=\"_blank\">\r\n                                ${magicSet.name}\r\n                            </a>\r\n                        </td>\r\n                    </tr>\r\n                `\r\n                });\r\n                magicTable.innerHTML = table;\r\n            }\r\n        });\r\n    } else {\r\n\r\n    }\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/templates.js\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/styles/styles.css\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}